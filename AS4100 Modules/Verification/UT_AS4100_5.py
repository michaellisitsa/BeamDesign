from unittest import TestCase
import AS4100_5

class Test_UT_AS4100_5(TestCase):
    """
    This class is a unit test class for the methods in the file AS4100_5.py

    These are all bending capacity or shear methods.
    """

    delta_p = 10000  # accept an accuracy of 0.01% in these tests

    def test_s5_2_M_s(self):
        """
        Test the s5_2_M_s method against values calculated in MS Excel.
        """

        Section = ('45x45x3EA', '150x150x12EA', '310UC137', '75x50x8UA',
                   '700WB173', '800WB168', '400WC181', '200x200x26EA',
                   '310UB40.4', '310UC158', '40x40x6EA', '1200WB342',
                   '180UB18.1', '500WC267', '200UBP146', '65x65x8EA',
                   '250UBP62.6', '25x25x5EA', '300PFC', '350WC280', '310UC118',
                   '125x125x12EA', '125x75x12UA', '250UB25.7', '250UBP84.9',
                   '100x100x12EA', '65x50x8UA', '150PFC', '200PFC', '250UC72.9',
                   '310UC96.8', '400WC144', '45x45x5EA', '400WC328', '610UB125',
                   '75x75x10EA', '200UB18.2', '200x200x20EA', '65x50x5UA',
                   '800WB122', '75x50x5UA', '100x100x8EA', '125TFB',
                   '1200WB455', '310UB46.2', '75x75x6EA')

        Zex = (3.19000E-06, 1.55000E-04, 2.30000E-03, 1.70000E-05, 6.39000E-03,
               6.84000E-03, 3.41000E-03, 6.02000E-04, 6.33000E-04, 2.68000E-03,
               5.29000E-06, 1.98000E-02, 1.57000E-04, 6.70000E-03, 1.70000E-03,
               1.92000E-05, 7.47000E-04, 1.47000E-06, 5.64000E-04, 4.94000E-03,
               1.95000E-03, 1.09000E-04, 6.76000E-05, 3.19000E-04, 1.07000E-03,
               6.99000E-05, 1.41000E-05, 1.29000E-04, 2.21000E-04, 9.77000E-04,
               1.55000E-03, 2.41000E-03, 5.32000E-06, 7.10000E-03, 3.68000E-03,
               3.05000E-05, 1.80000E-04, 4.69000E-04, 7.59000E-06, 4.34000E-03,
               8.66000E-06, 4.29000E-05, 8.03000E-05, 2.81000E-02, 7.29000E-04,
               1.84000E-05)

        Zey = (1.55000E-06, 7.23000E-05, 1.04000E-03, 5.93000E-06, 1.06000E-03,
               9.46000E-04, 1.51000E-03, 2.67000E-04, 1.39000E-04, 1.21000E-03,
               2.33000E-06, 2.56000E-03, 3.25000E-05, 2.97000E-03, 7.64000E-04,
               8.59000E-06, 3.18000E-04, 6.42000E-07, 7.72000E-05, 2.45000E-03,
               8.78000E-04, 4.96000E-05, 2.03000E-05, 6.17000E-05, 4.74000E-04,
               3.11000E-05, 5.86000E-06, 3.85000E-05, 4.45000E-05, 4.48000E-04,
               6.84000E-04, 1.07000E-03, 2.44000E-06, 3.20000E-03, 5.15000E-04,
               1.36000E-05, 3.44000E-05, 2.14000E-04, 3.17000E-06, 4.86000E-04,
               3.02000E-06, 2.00000E-05, 1.56000E-05, 5.00000E-03, 1.63000E-04,
               8.70000E-06)

        fy = (3.20000E+08, 3.00000E+08, 2.80000E+08, 3.20000E+08, 2.80000E+08,
              2.80000E+08, 3.00000E+08, 2.80000E+08, 3.20000E+08, 2.80000E+08,
              3.20000E+08, 2.80000E+08, 3.20000E+08, 2.80000E+08, 2.80000E+08,
              3.20000E+08, 3.20000E+08, 3.20000E+08, 3.40000E+08, 3.60000E+08,
              3.40000E+08, 3.40000E+08, 3.40000E+08, 3.60000E+08, 3.40000E+08,
              3.40000E+08, 3.60000E+08, 3.60000E+08, 3.40000E+08, 3.40000E+08,
              3.40000E+08, 3.80000E+08, 3.60000E+08, 3.60000E+08, 3.40000E+08,
              3.60000E+08, 3.60000E+08, 3.40000E+08, 3.60000E+08, 3.80000E+08,
              3.60000E+08, 3.60000E+08, 3.60000E+08, 3.60000E+08, 3.40000E+08,
              3.60000E+08)

        Msx = (1.02080E+03, 4.65000E+04, 6.44000E+05, 5.44000E+03, 1.78920E+06,
               1.91520E+06, 1.02300E+06, 1.68560E+05, 2.02560E+05, 7.50400E+05,
               1.69280E+03, 5.54400E+06, 5.02400E+04, 1.87600E+06, 4.76000E+05,
               6.14400E+03, 2.39040E+05, 4.70400E+02, 1.91760E+05, 1.77840E+06,
               6.63000E+05, 3.70600E+04, 2.29840E+04, 1.14840E+05, 3.63800E+05,
               2.37660E+04, 5.07600E+03, 4.64400E+04, 7.51400E+04, 3.32180E+05,
               5.27000E+05, 9.15800E+05, 1.91520E+03, 2.55600E+06, 1.25120E+06,
               1.09800E+04, 6.48000E+04, 1.59460E+05, 2.73240E+03, 1.64920E+06,
               3.11760E+03, 1.54440E+04, 2.89080E+04, 1.01160E+07, 2.47860E+05,
               6.62400E+03)

        Msy = (4.96000E+02, 2.16900E+04, 2.91200E+05, 1.89760E+03, 2.96800E+05,
               2.64880E+05, 4.53000E+05, 7.47600E+04, 4.44800E+04, 3.38800E+05,
               7.45600E+02, 7.16800E+05, 1.04000E+04, 8.31600E+05, 2.13920E+05,
               2.74880E+03, 1.01760E+05, 2.05440E+02, 2.62480E+04, 8.82000E+05,
               2.98520E+05, 1.68640E+04, 6.90200E+03, 2.22120E+04, 1.61160E+05,
               1.05740E+04, 2.10960E+03, 1.38600E+04, 1.51300E+04, 1.52320E+05,
               2.32560E+05, 4.06600E+05, 8.78400E+02, 1.15200E+06, 1.75100E+05,
               4.89600E+03, 1.23840E+04, 7.27600E+04, 1.14120E+03, 1.84680E+05,
               1.08720E+03, 7.20000E+03, 5.61600E+03, 1.80000E+06, 5.54200E+04,
               3.13200E+03)

        for Zexi, Zeyi, fyi, Msxi, Msyi in zip(Zex, Zey, fy, Msx, Msy):

            Mx = AS4100_5.s5_2_M_s(fyi, Zexi)
            My = AS4100_5.s5_2_M_s(fyi, Zeyi)

            self.assertAlmostEqual(first = Mx, second = Msxi,
                                   delta = Msxi / Test_UT_AS4100_5.delta_p)
            self.assertAlmostEqual(first=My, second=Msyi,
                                   delta=Msyi / Test_UT_AS4100_5.delta_p)

    def test_s5_6_1_M_o(self):
        """
        Test the s5_6_1_M_o method against values calculated in Excel.

        Î²_x is assumed to be 0.0000
        """

        Section = ('45x45x3EA', '150x150x12EA', '310UC137', '75x50x8UA',
                   '700WB173', '800WB168', '400WC181', '200x200x26EA',
                   '310UB40.4', '310UC158', '40x40x6EA', '1200WB342',
                   '180UB18.1', '500WC267', '200UBP146', '65x65x8EA',
                   '250UBP62.6', '25x25x5EA', '300PFC', '350WC280', '310UC118',
                   '125x125x12EA', '125x75x12UA', '250UB25.7', '250UBP84.9',
                   '100x100x12EA', '65x50x8UA', '150PFC', '200PFC', '250UC72.9',
                   '310UC96.8', '400WC144', '45x45x5EA', '400WC328', '610UB125',
                   '75x75x10EA', '200UB18.2', '200x200x20EA', '65x50x5UA',
                   '800WB122', '75x50x5UA', '100x100x8EA', '125TFB',
                   '1200WB455', '310UB46.2', '75x75x6EA')

        le = (6.71748E+00, 5.00175E+00, 8.39480E+00, 7.88096E+00, 8.15890E+00,
              4.44118E+00, 3.39838E+00, 7.70670E+00, 1.60749E+00, 9.67610E-01,
              4.39861E+00, 3.69312E+00, 8.87880E+00, 2.64963E+00, 9.01857E+00,
              5.86595E+00, 1.85971E+00, 3.19589E+00, 9.19554E+00, 2.27102E+00,
              1.02159E+00, 9.13501E+00, 7.77546E+00, 3.73183E+00, 7.00531E+00,
              6.78814E+00, 7.90351E+00, 1.08615E+00, 9.58450E+00, 5.63679E+00,
              2.36882E+00, 1.18624E+00, 7.14942E+00, 9.28371E-01, 8.31483E+00,
              4.03320E+00, 8.68449E+00, 3.60536E+00, 8.10943E+00, 3.04344E+00,
              4.53965E+00, 9.00473E+00, 1.05809E+00, 8.29448E+00, 2.88927E+00,
              6.17874E+00)

        Iy = (2.06000E-08, 3.06000E-06, 1.07000E-04, 1.06000E-07, 9.71000E-05,
              8.67000E-05, 2.14000E-04, 1.49000E-05, 7.65000E-06, 1.25000E-04,
              2.65000E-08, 3.42000E-04, 9.75000E-07, 5.21000E-04, 5.55000E-05,
              1.54000E-07, 2.97000E-05, 4.69000E-09, 4.04000E-06, 2.86000E-04,
              9.02000E-05, 1.73000E-06, 5.85000E-07, 2.55000E-06, 4.20000E-05,
              8.57000E-07, 9.36000E-08, 1.29000E-06, 1.65000E-06, 3.88000E-05,
              7.29000E-05, 1.71000E-04, 3.03000E-08, 4.27000E-04, 3.93000E-05,
              2.82000E-07, 1.14000E-06, 1.18000E-05, 5.87000E-08, 4.17000E-05,
              6.66000E-08, 5.82000E-07, 3.37000E-07, 8.34000E-04, 9.01000E-06,
              1.87000E-07)

        J = (8.75000E-10, 1.74000E-07, 2.52000E-06, 1.95000E-08, 4.02000E-06,
             2.99000E-06, 3.08000E-06, 2.25000E-06, 1.57000E-07, 3.81000E-06,
             5.60000E-09, 9.96000E-06, 4.48000E-08, 6.37000E-06, 5.98000E-06,
             2.00000E-08, 3.45000E-07, 1.66000E-09, 2.90000E-07, 1.65000E-05,
             1.63000E-06, 1.41000E-07, 1.10000E-07, 6.74000E-08, 8.27000E-07,
             1.10000E-07, 1.76000E-08, 5.49000E-08, 1.01000E-07, 5.86000E-07,
             9.28000E-07, 1.58000E-06, 2.96000E-09, 1.92000E-05, 1.56000E-06,
             4.19000E-08, 3.86000E-08, 1.06000E-06, 3.87000E-09, 9.21000E-07,
             4.32000E-09, 3.17000E-08, 4.02000E-08, 2.20000E-05, 2.33000E-07,
             1.12000E-08)

        Iw = (0.00000E+00, 0.00000E+00, 2.39000E-06, 0.00000E+00, 1.15000E-05,
              1.34000E-05, 7.31000E-06, 0.00000E+00, 1.65000E-07, 2.86000E-06,
              0.00000E+00, 1.13000E-04, 6.80000E-09, 2.94000E-05, 6.30000E-07,
              0.00000E+00, 4.15000E-07, 0.00000E+00, 5.82000E-08, 7.10000E-06,
              1.98000E-06, 0.00000E+00, 0.00000E+00, 3.67000E-08, 6.03000E-07,
              0.00000E+00, 0.00000E+00, 4.59000E-09, 1.06000E-08, 5.57000E-07,
              1.56000E-06, 5.72000E-06, 0.00000E+00, 1.62000E-05, 3.45000E-06,
              0.00000E+00, 1.04000E-08, 0.00000E+00, 0.00000E+00, 6.28000E-06,
              0.00000E+00, 0.00000E+00, 1.14000E-09, 2.80000E-04, 1.97000E-07,
              0.00000E+00)

        E = (2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11)

        G = (8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10)

        Mo0 = (2.51154E+02, 5.79727E+04, 8.97126E+05, 2.29246E+03, 1.38125E+06,
                3.70284E+06, 7.39670E+06, 2.98556E+05, 8.99975E+05, 4.08579E+07,
                1.10055E+03, 2.91357E+07, 9.57360E+03, 3.58544E+07, 8.15457E+05,
                3.75965E+03, 2.11728E+06, 3.46944E+02, 4.81261E+04, 2.10220E+07,
                2.57126E+07, 2.14849E+04, 1.29646E+04, 6.18783E+04, 3.90824E+05,
                1.79740E+04, 2.04072E+03, 1.61422E+05, 1.71625E+04, 4.43184E+05,
                3.99708E+06, 4.42155E+07, 5.26388E+02, 1.94387E+08, 5.00557E+05,
                1.07100E+04, 1.00128E+04, 3.89812E+05, 7.38574E+02, 3.54230E+06,
                1.48479E+03, 5.99419E+03, 5.57239E+04, 1.53084E+07, 3.72767E+05,
                2.94334E+03)

        for Si, lei, Iyi, Ji, Iwi, Ei, Gi, Mo0i in zip(Section, le, Iy, J, Iw,
                                                       E, G, Mo0):

            #first check Î²x = 0
            M = AS4100_5.s5_6_1_M_o(lei, Iyi, Ji, Iwi, 0., Ei, Gi)

            self.assertAlmostEqual(first = M, second = Mo0i,
                                   delta = Mo0i / Test_UT_AS4100_5.delta_p,
                                   msg = 'Test of M_o method failed on ' +
                                         'Section: ' + Si)


    def test_s5_6_1_M_o_Î²_x_rand(self):
        """
        Test the s5_6_1_M_o method against values calculated in Excel.

        Currently Î²_x is a random number as an accurate means of calculating Î²_x
        has not yet been implemented.
        """

        Section = ('45x45x3EA', '150x150x12EA', '310UC137', '75x50x8UA',
                   '700WB173', '800WB168', '400WC181', '200x200x26EA',
                   '310UB40.4', '310UC158', '40x40x6EA', '1200WB342',
                   '180UB18.1', '500WC267', '200UBP146', '65x65x8EA',
                   '250UBP62.6', '25x25x5EA', '300PFC', '350WC280', '310UC118',
                   '125x125x12EA', '125x75x12UA', '250UB25.7', '250UBP84.9',
                   '100x100x12EA', '65x50x8UA', '150PFC', '200PFC', '250UC72.9',
                   '310UC96.8', '400WC144', '45x45x5EA', '400WC328', '610UB125',
                   '75x75x10EA', '200UB18.2', '200x200x20EA', '65x50x5UA',
                   '800WB122', '75x50x5UA', '100x100x8EA', '125TFB',
                   '1200WB455', '310UB46.2', '75x75x6EA')

        le = (6.71748E+00, 5.00175E+00, 8.39480E+00, 7.88096E+00, 8.15890E+00,
              4.44118E+00, 3.39838E+00, 7.70670E+00, 1.60749E+00, 9.67610E-01,
              4.39861E+00, 3.69312E+00, 8.87880E+00, 2.64963E+00, 9.01857E+00,
              5.86595E+00, 1.85971E+00, 3.19589E+00, 9.19554E+00, 2.27102E+00,
              1.02159E+00, 9.13501E+00, 7.77546E+00, 3.73183E+00, 7.00531E+00,
              6.78814E+00, 7.90351E+00, 1.08615E+00, 9.58450E+00, 5.63679E+00,
              2.36882E+00, 1.18624E+00, 7.14942E+00, 9.28371E-01, 8.31483E+00,
              4.03320E+00, 8.68449E+00, 3.60536E+00, 8.10943E+00, 3.04344E+00,
              4.53965E+00, 9.00473E+00, 1.05809E+00, 8.29448E+00, 2.88927E+00,
              6.17874E+00)

        Iy = (2.06000E-08, 3.06000E-06, 1.07000E-04, 1.06000E-07, 9.71000E-05,
              8.67000E-05, 2.14000E-04, 1.49000E-05, 7.65000E-06, 1.25000E-04,
              2.65000E-08, 3.42000E-04, 9.75000E-07, 5.21000E-04, 5.55000E-05,
              1.54000E-07, 2.97000E-05, 4.69000E-09, 4.04000E-06, 2.86000E-04,
              9.02000E-05, 1.73000E-06, 5.85000E-07, 2.55000E-06, 4.20000E-05,
              8.57000E-07, 9.36000E-08, 1.29000E-06, 1.65000E-06, 3.88000E-05,
              7.29000E-05, 1.71000E-04, 3.03000E-08, 4.27000E-04, 3.93000E-05,
              2.82000E-07, 1.14000E-06, 1.18000E-05, 5.87000E-08, 4.17000E-05,
              6.66000E-08, 5.82000E-07, 3.37000E-07, 8.34000E-04, 9.01000E-06,
              1.87000E-07)

        J = (8.75000E-10, 1.74000E-07, 2.52000E-06, 1.95000E-08, 4.02000E-06,
             2.99000E-06, 3.08000E-06, 2.25000E-06, 1.57000E-07, 3.81000E-06,
             5.60000E-09, 9.96000E-06, 4.48000E-08, 6.37000E-06, 5.98000E-06,
             2.00000E-08, 3.45000E-07, 1.66000E-09, 2.90000E-07, 1.65000E-05,
             1.63000E-06, 1.41000E-07, 1.10000E-07, 6.74000E-08, 8.27000E-07,
             1.10000E-07, 1.76000E-08, 5.49000E-08, 1.01000E-07, 5.86000E-07,
             9.28000E-07, 1.58000E-06, 2.96000E-09, 1.92000E-05, 1.56000E-06,
             4.19000E-08, 3.86000E-08, 1.06000E-06, 3.87000E-09, 9.21000E-07,
             4.32000E-09, 3.17000E-08, 4.02000E-08, 2.20000E-05, 2.33000E-07,
             1.12000E-08)

        Iw = (0.00000E+00, 0.00000E+00, 2.39000E-06, 0.00000E+00, 1.15000E-05,
              1.34000E-05, 7.31000E-06, 0.00000E+00, 1.65000E-07, 2.86000E-06,
              0.00000E+00, 1.13000E-04, 6.80000E-09, 2.94000E-05, 6.30000E-07,
              0.00000E+00, 4.15000E-07, 0.00000E+00, 5.82000E-08, 7.10000E-06,
              1.98000E-06, 0.00000E+00, 0.00000E+00, 3.67000E-08, 6.03000E-07,
              0.00000E+00, 0.00000E+00, 4.59000E-09, 1.06000E-08, 5.57000E-07,
              1.56000E-06, 5.72000E-06, 0.00000E+00, 1.62000E-05, 3.45000E-06,
              0.00000E+00, 1.04000E-08, 0.00000E+00, 0.00000E+00, 6.28000E-06,
              0.00000E+00, 0.00000E+00, 1.14000E-09, 2.80000E-04, 1.97000E-07,
              0.00000E+00)

        Î²x = (1.28173E-01, -1.42314E-01, 1.78449E-01, 2.45703E-01, -1.48817E-01,
              1.90016E-01, -3.08997E-02, 2.27412E-01, -4.31823E-02, 2.32830E-01,
              7.81551E-02, -1.81195E-01, -2.03927E-01, 6.99328E-02,
              -1.73018E-01, 1.61423E-01, -1.78620E-01, -1.16781E-01,
              4.82682E-02, -1.22808E-01, 4.07138E-02, 6.11456E-02, 2.12952E-01,
              -1.25923E-01, -3.82946E-02, 1.14895E-01, -8.74274E-03,
              -1.73450E-01, 2.35091E-01, 1.89466E-02, 1.48394E-01, -2.44949E-01,
              1.32684E-01, 8.93709E-02, 4.72989E-02, -4.30083E-02, -1.44619E-01,
              4.54835E-02, -1.31337E-01, 5.14391E-02, -1.30045E-01,
              -8.56207E-02, -1.38838E-01, 8.20854E-02, 1.10207E-01, 1.86297E-01)

        E = (2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11, 2.00000E+11,
             2.00000E+11)

        G = (8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10, 8.00000E+10,
             8.00000E+10)

        Mo = (3.15458E+02, 4.32847E+04, 1.20354E+06, 2.74338E+03, 1.18352E+06,
               4.61784E+06, 6.85316E+06, 3.60126E+05, 7.82603E+05, 8.17736E+07,
               1.21126E+03, 2.49946E+07, 7.40267E+03, 4.13406E+07, 7.07217E+05,
               4.53970E+03, 1.08894E+06, 2.98032E+02, 5.04559E+04, 1.53491E+07,
               2.94190E+07, 2.27724E+04, 1.51568E+04, 4.31738E+04, 3.59813E+05,
               2.02064E+04, 2.02784E+03, 5.99878E+04, 2.18288E+04, 4.66607E+05,
               6.32959E+06, 2.37074E+07, 6.09709E+02, 2.42938E+08, 5.27796E+05,
               9.99943E+03, 8.08513E+03, 4.32687E+05, 6.31879E+02, 3.77822E+06,
               1.12686E+03, 5.41826E+03, 2.80816E+04, 1.63219E+07, 5.08213E+05,
               3.97868E+03)

        for Si, lei, Iyi, Ji, Iwi, Î²xi, Ei, Gi, Moi in zip(Section, le, Iy, J,
                                                           Iw, Î²x, E, G, Mo):

            M = AS4100_5.s5_6_1_M_o(lei, Iyi, Ji, Iwi, Î²xi, Ei, Gi)

            self.assertAlmostEqual(first=M, second=Moi,
                                   delta=Moi / Test_UT_AS4100_5.delta_p,
                                   msg = 'Check of M_o method failed on ' +
                                         'Section: ' + Si + '.')

    def test_s5_6_1_M_o_Î²_x(self):
        """
        Test the s5_6_1_M_o method with accurate values of Î²_x.
        """

        #TODO: implement check with accurate values of Î²_x

        self.fail("Have not yet developed an accurate Î²_x calculator)")

    def test_s5_6_1_Î±_m(self):
        """
        Test the s5_6_1_Î±_m method
        """

        self.fail("Not yet implemented")

    def test_s5_6_Î±_s(self):
        """
        Test the s5_6_Î±_s method
        """

        self.fail("Not yet implemented")

    def test_s5_6_3_k_t(self):
        """
        Test the s5_6_3_k_t method.
        """

        self.fail("Not yet implemented")

    def test_s5_6_3_l_e(self):
        """
        Test the s5_6_3_l_e method.
        """

        self.fail("Not yet implemented")

    def test_s5_6_1_Mb(self):
        """
        Test the s5_6_1_Mb method.
        """

        self.fail("Not yet implemented")
